{"version":3,"file":"static/js/482.f4250d98.chunk.js","mappings":"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","sources":["components/Carts/CartsList.styled.jsx","components/Carts/CartsListItem.jsx","components/Modal/ChartModal.styled.jsx","components/Modal/ChartModal.jsx","components/Carts/CartsList.jsx","components/Products/Products.styled.jsx","components/Products/ProductsItem.jsx","components/Products/UserAddCart.jsx","pages/CartsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CartsListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n  grid-gap: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nexport const CartsListItemStyled = styled.li`\n  position: relative;\n  background-color: #1d1d1d;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n  &:hover {\n    transition: 500ms;\n    transform: scale(1.03);\n  }\n`;\n\nexport const CartsListItemTextStyled = styled.p`\n  margin: 0;\n  margin-bottom: 5px;\n  &:first-of-type {\n    margin-top: 5px;\n    margin-bottom: 10px;\n    font-size: 18px;\n  }\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CartsDeleteButtonStyled = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: black;\n  color: #cecccc;\n  margin: 0;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 1px, solid, #cecccc;\n  &:hover,\n  &:focus {\n    color: red;\n    transition: 500ms;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const CartsListLinkStyled = styled.a`\n  cursor: pointer;\n  color: #cecccc;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  text-decoration: none;\n`;\n","import {\n  CartsListItemStyled,\n  CartsListItemTextStyled,\n  CartsDeleteButtonStyled,\n  CartsListLinkStyled,\n} from './CartsList.styled';\nimport { BsFillBasket2Fill } from 'react-icons/bs';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteCart } from 'redux/carts/operations';\nimport { getIsDeleting } from 'redux/carts/cartsSlice';\nimport PropTypes from 'prop-types';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport const CartsListItem = ({ total, discountedTotal, userId, id }) => {\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(getIsDeleting);\n  return (\n    <CartsListItemStyled>\n      <CartsDeleteButtonStyled\n        onClick={() => dispatch(deleteCart(id))}\n        disabled={isDeleting}\n      >\n        {isDeleting ? <ColorRing /> : <AiOutlineClose />}\n      </CartsDeleteButtonStyled>\n      <CartsListLinkStyled id={id}>\n        <BsFillBasket2Fill />\n        <CartsListItemTextStyled>User number: {userId}</CartsListItemTextStyled>\n\n        <CartsListItemTextStyled>Total: {total}</CartsListItemTextStyled>\n        <CartsListItemTextStyled>\n          Discounted Total: {discountedTotal}\n        </CartsListItemTextStyled>\n      </CartsListLinkStyled>\n    </CartsListItemStyled>\n  );\n};\n\nCartsListItem.propTypes = {\n  total: PropTypes.number.isRequired,\n  discountedTotal: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ChartModalOverlayStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n  overflow: hidden;\n`;\n\nexport const ChartModalBodyStyled = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const ChartModalContainerStyled = styled.div`\n  position: relative;\n  background-color: white;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  border-radius: 4px;\n  width: 270px;\n  @media (min-width: 480px) {\n    width: 450px;\n  }\n  @media (min-width: 768px) {\n    width: 730px;\n  }\n  @media (min-width: 1280px) {\n    width: 1200px;\n  }\n`;\n\nexport const ChartModalCloseButtonStyled = styled.button`\n  position: absolute;\n  top: 10px;\n  border: none;\n  right: 10px;\n  background-color: transparent;\n  margin: 0;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: red;\n    transition: 500ms;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import { useEffect } from 'react';\nimport {\n  ChartModalBodyStyled,\n  ChartModalOverlayStyled,\n  ChartModalContainerStyled,\n  ChartModalCloseButtonStyled,\n} from './ChartModal.styled';\nimport PropTypes from 'prop-types';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport const ChartModal = ({ cart, onClose }) => {\n  const chartData = {\n    labels: cart.products.map(({ title }) => title),\n    datasets: [\n      {\n        label: 'Price',\n        data: cart.products.map(({ price }) => price),\n        fill: true,\n        borderColor: 'blue',\n      },\n      {\n        label: 'Discounted price',\n        data: cart.products.map(({ discountedPrice }) => discountedPrice),\n        fill: true,\n        borderColor: 'green',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: { position: 'top' },\n      title: {\n        display: true,\n        text: `Cart number: ${cart.id}`,\n      },\n    },\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <ChartModalOverlayStyled onClick={handleOverlayClick}>\n      <ChartModalBodyStyled>\n        <ChartModalContainerStyled>\n          {Object.keys(cart) !== 0 && (\n            <Line data={chartData} options={chartOptions} />\n          )}\n          <ChartModalCloseButtonStyled onClick={() => onClose()}>\n            <AiOutlineClose />\n          </ChartModalCloseButtonStyled>\n        </ChartModalContainerStyled>\n      </ChartModalBodyStyled>\n    </ChartModalOverlayStyled>\n  );\n};\n\nChartModal.propTypes = {\n  cart: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { CartsListStyled } from './CartsList.styled';\nimport { useSelector } from 'react-redux';\nimport { getCarts } from 'redux/carts/cartsSlice';\nimport { CartsListItem } from './CartsListItem';\nimport { useState, useCallback } from 'react';\nimport { ChartModal } from 'components/Modal/ChartModal';\n\nexport const CartsList = () => {\n  const carts = useSelector(getCarts);\n  const [showModal, setShowModal] = useState(false);\n  const [cart, setCart] = useState({});\n\n  const openModal = e => {\n    if (e.target.closest('a')) {\n      const eventElement = carts.find(\n        cart => cart.id.toString() === e.target.closest('a').id\n      );\n      setCart(eventElement);\n      togleModal();\n    }\n  };\n\n  const togleModal = useCallback(() => {\n    setShowModal(!showModal);\n  }, [showModal]);\n\n  return (\n    <>\n      <CartsListStyled onClick={openModal}>\n        {carts.map(({ id, total, discountedTotal, userId }) => {\n          return (\n            <CartsListItem\n              key={id}\n              total={total}\n              discountedTotal={discountedTotal}\n              userId={userId}\n              id={id}\n            />\n          );\n        })}\n      </CartsListStyled>\n      {showModal && <ChartModal cart={cart} onClose={togleModal} />}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ProductAddFormTextStyled = styled.p`\n  padding-top: 50px;\n  text-align: center;\n  margin: 0;\n  font-size: 35px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nexport const ProductAddFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const ProductAddLabelStyled = styled.label`\n  display: flex;\n\n  align-items: center;\n  font-weight: 500;\n  margin-right: 10px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ProductAddInputStyled = styled.input`\n  margin-left: 5px;\n  width: 40px;\n  outline: none;\n  border-radius: 2px;\n  border: 1px solid gray;\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: #de07f1;\n    transition: 500ms;\n  }\n`;\n\nexport const ProductAddButtonStyled = styled.button`\n  font-size: 16px;\n  color: #cecccc;\n  background-color: #1794dd;\n  margin: 0;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  border: none;\n  &:hover,\n  &:focus {\n    color: #de07f1;\n    transition: 500ms;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-left: 5px;\n    @media (max-width: 479px) {\n      margin: 0;\n    }\n  }\n  span {\n    display: block;\n    @media (max-width: 479px) {\n      display: none;\n    }\n  }\n`;\n\nexport const ProductsListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 20px;\n`;\n\nexport const ProductsListItemStyled = styled.li`\n  position: relative;\n  padding: 10px;\n  border-radius: 4px;\n  background-color: #1d1d1d;\n  margin-bottom: 15px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const ProductsListTextStyled = styled.p`\n  font-size: 20px;\n  color: #cecccc;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  width: 375px;\n  svg {\n    margin-right: 5px;\n  }\n  @media (max-width: 479px) {\n    width: 150px;\n  }\n`;\n\nexport const ProductDeleteButtonStyled = styled.button`\n  position: absolute;\n  top: 50;\n  right: 10px;\n  background-color: transparent;\n  color: #cecccc;\n  margin: 0;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 1px, solid, #cecccc;\n  &:hover,\n  &:focus {\n    color: red;\n    transition: 500ms;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const ProductsListEmptyTextStyled = styled.p`\n  font-size: 20px;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  color: red;\n`;\n\nexport const NewCartAddButtonStyled = styled.button`\n  font-size: 16px;\n  color: #cecccc;\n  background-color: #1794dd;\n  margin: 0;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  border: none;\n  &:hover,\n  &:focus {\n    color: #de07f1;\n    transition: 500ms;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-left: 5px;\n  }\n`;\n","import {\n  ProductsListItemStyled,\n  ProductsListTextStyled,\n  ProductDeleteButtonStyled,\n} from './Products.styled';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { deleteProduct } from 'redux/products/productsSlice';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const ProductsItem = ({ title, quantity, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ProductsListItemStyled>\n      <ProductDeleteButtonStyled\n        onClick={() => {\n          dispatch(deleteProduct(id));\n        }}\n      >\n        <AiOutlineClose />\n      </ProductDeleteButtonStyled>\n      <ProductsListTextStyled>{title} </ProductsListTextStyled>\n      <ProductsListTextStyled>Quantity: {quantity}</ProductsListTextStyled>\n    </ProductsListItemStyled>\n  );\n};\n\nProductsItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductById } from 'redux/products/operations';\nimport {\n  ProductAddFormStyled,\n  ProductAddLabelStyled,\n  ProductAddInputStyled,\n  ProductAddFormTextStyled,\n  ProductAddButtonStyled,\n  ProductsListStyled,\n  ProductsListEmptyTextStyled,\n  NewCartAddButtonStyled,\n} from '../Products/Products.styled';\nimport { getProducts } from 'redux/products/productsSlice';\nimport { getProductsIsLoading } from 'redux/products/productsSlice';\nimport { ProductsItem } from './ProductsItem';\nimport { BiCartAdd } from 'react-icons/bi';\nimport { IoMdAddCircle } from 'react-icons/io';\nimport { Loader } from 'components/Loader';\nimport { addCart } from 'redux/carts/operations';\nimport { toast } from 'react-toastify';\n\nexport const UserAddCart = () => {\n  const dispatch = useDispatch();\n  const products = useSelector(getProducts);\n  const isLoading = useSelector(getProductsIsLoading);\n\n  const handleProductSubmit = e => {\n    e.preventDefault();\n    const id = e.currentTarget.elements[0].value;\n    const quantity = e.currentTarget.elements[1].value;\n    if (id === '' || quantity === '') {\n      return toast.warn('Oops, you are missing a required field');\n    }\n\n    if (products.some(product => Number(id) === product.id)) {\n      return toast.warn('This product is already in cart');\n    }\n\n    dispatch(fetchProductById({ id, quantity }));\n    e.currentTarget.reset();\n  };\n\n  const handleCartSubmit = e => {\n    e.preventDefault();\n    const userId = e.currentTarget.elements[0].value;\n\n    if (userId === '') {\n      return toast.warn('Please enter your user number');\n    }\n\n    const newCart = products.map(({ id, quantity }) => {\n      return { id, quantity };\n    });\n\n    dispatch(addCart({ userId, products: newCart }));\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <ProductAddFormTextStyled>Add a new cart</ProductAddFormTextStyled>\n      <ProductAddFormStyled onSubmit={handleProductSubmit}>\n        <ProductAddLabelStyled>\n          Product ID:\n          <ProductAddInputStyled\n            type={'number'}\n            min={'0'}\n          ></ProductAddInputStyled>\n        </ProductAddLabelStyled>\n        <ProductAddLabelStyled>\n          Quantity:\n          <ProductAddInputStyled\n            type={'number'}\n            min={'0'}\n          ></ProductAddInputStyled>\n        </ProductAddLabelStyled>\n        <ProductAddButtonStyled>\n          <span>Add product</span>\n          <IoMdAddCircle />\n        </ProductAddButtonStyled>\n      </ProductAddFormStyled>\n      {isLoading && <Loader />}\n      {products.length !== 0 ? (\n        <>\n          <ProductsListStyled>\n            {products.map(({ title, quantity, id }) => (\n              <ProductsItem\n                key={id}\n                title={title}\n                quantity={quantity}\n                id={id}\n              />\n            ))}\n          </ProductsListStyled>\n          <ProductAddFormStyled onSubmit={handleCartSubmit}>\n            <ProductAddLabelStyled>\n              User number:\n              <ProductAddInputStyled\n                type={'number'}\n                min={'0'}\n              ></ProductAddInputStyled>\n            </ProductAddLabelStyled>\n            <NewCartAddButtonStyled>\n              Add cart <BiCartAdd />\n            </NewCartAddButtonStyled>\n          </ProductAddFormStyled>\n        </>\n      ) : (\n        <ProductsListEmptyTextStyled>\n          Your cart is currently empty\n        </ProductsListEmptyTextStyled>\n      )}\n    </>\n  );\n};\n","import { CartsList } from 'components/Carts/CartsList';\nimport { getIsLoading, getCarts } from 'redux/carts/cartsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCarts } from 'redux/carts/operations';\nimport { AppContainerStyled } from 'components/App.styled';\nimport { Helmet } from 'react-helmet';\nimport { Loader } from 'components/Loader';\nimport { UserAddCart } from 'components/Products/UserAddCart';\n\nconst CartsPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const carts = useSelector(getCarts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCarts());\n  }, [dispatch]);\n\n  return (\n    <AppContainerStyled>\n      <Helmet>\n        <title>Carts</title>\n      </Helmet>\n      <UserAddCart />\n      {isLoading && <Loader />}\n      {carts.length !== 0 && <CartsList />}\n    </AppContainerStyled>\n  );\n};\n\nexport default CartsPage;\n"],"names":["CartsListStyled","styled","CartsListItemStyled","CartsListItemTextStyled","CartsDeleteButtonStyled","CartsListLinkStyled","CartsListItem","total","discountedTotal","userId","id","dispatch","useDispatch","isDeleting","useSelector","getIsDeleting","onClick","deleteCart","disabled","ChartModalOverlayStyled","ChartModalBodyStyled","ChartModalContainerStyled","ChartModalCloseButtonStyled","ChartJS","ArcElement","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","ChartModal","cart","onClose","chartData","labels","products","map","title","datasets","label","data","price","fill","borderColor","discountedPrice","chartOptions","responsive","plugins","legend","position","display","text","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","currentTarget","target","Object","keys","options","CartsList","carts","getCarts","useState","showModal","setShowModal","setCart","togleModal","useCallback","closest","eventElement","find","toString","ProductAddFormTextStyled","ProductAddFormStyled","ProductAddLabelStyled","ProductAddInputStyled","ProductAddButtonStyled","ProductsListStyled","ProductsListItemStyled","ProductsListTextStyled","ProductDeleteButtonStyled","ProductsListEmptyTextStyled","NewCartAddButtonStyled","ProductsItem","quantity","deleteProduct","UserAddCart","getProducts","isLoading","getProductsIsLoading","onSubmit","preventDefault","elements","value","toast","some","product","Number","fetchProductById","reset","type","min","Loader","length","newCart","addCart","getIsLoading","fetchCarts","Helmet"],"sourceRoot":""}